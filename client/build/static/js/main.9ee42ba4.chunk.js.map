{"version":3,"sources":["context/google/googleContext.js","context/shelf/shelfContext.js","components/Result/ResultItem.js","components/Result/Result.js","pages/Home.js","components/ShelfList/ShelfListItem.js","components/ShelfList/ShelfList.js","pages/Shelf.js","pages/NotFound.js","context/google/googleReducer.js","context/types.js","utils/API.js","context/google/GoogleState.js","context/shelf/shelfReducer.js","context/shelf/ShelfState.js","components/Nav/Nav.js","components/Jumbotron/Jumbotron.js","App.js","registerServiceWorker.js","index.js"],"names":["googleContext","createContext","shelfContext","ResultItem","props","useContext","ShelfContext","useState","buttonState","setButtonState","className","src","image","style","maxWidth","alt","title","description","fontStyle","authors","href","link","target","rel","onClick","addBook","console","log","books","marginLeft","Result","GoogleContext","map","book","key","id","volumeInfo","previewLink","imageLinks","thumbnail","length","join","Home","text","setText","onSubmit","e","preventDefault","searchBooks","Form","Group","type","name","placeholder","value","onChange","ShelfListItem","removeBook","margin","marginRight","backgroundColor","color","ShelfList","booksInShelf","removeBookFromShelf","_id","Shelf","useEffect","getAllBooks","NotFound","state","action","payload","API","getGoogleBooks","query","axios","get","bookData","post","getBook","delete","GoogleState","useReducer","GoogleReducer","dispatch","searchBookName","a","res","data","items","Provider","children","filter","ShelfState","ShelfReducer","newBook","Nav","to","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Jumbotron","App","Container","fluid","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.9ee42ba4.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nconst googleContext = createContext();\r\n\r\nexport default googleContext;\r\n","import { createContext } from 'react';\r\n\r\nconst shelfContext = createContext();\r\n\r\nexport default shelfContext;","\r\nimport React, { useContext, useState } from 'react';\r\nimport ShelfContext from \"../../context/shelf/shelfContext\";\r\n\r\nconst ResultItem = (props) => {\r\n\r\n    const shelfContext = useContext(ShelfContext);\r\n    const [buttonState, setButtonState] = useState(false)\r\n\r\n    function addToShelf() {\r\n        shelfContext.addBook(props)\r\n        console.log(shelfContext.books)\r\n        setButtonState(true)\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n            <div className=\"card\">\r\n                <div className=\"card-header\"></div>\r\n                <div className=\"card-body\">\r\n                    <img src={props.image} style={{ maxWidth: \"100px\" }} alt=\"book\" />\r\n                    <h5 className=\"card-title\">{props.title}</h5>\r\n                    <p className=\"card-text\" >{props.description}</p>\r\n                    <p style={{ fontStyle: \"italic\" }}>Author(s): {props.authors}</p>\r\n                    <a href={props.link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"btn btn-primary\" >View Book</a>\r\n                    <button onClick={() => { addToShelf() }} className={buttonState ? \"btn btn-success\" : \"btn btn-info\"} style={{ marginLeft: \"6px\" }}>{buttonState ? \"Added\" : \"Add\"}</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResultItem\r\n","import React,{ useContext}  from 'react'\r\nimport GoogleContext from \"../../context/google/googleContext\";\r\nimport ResultItem from \"./ResultItem.js\"\r\n\r\nconst Result = () => {\r\n    const googleContext = useContext(GoogleContext);\r\n\r\n\r\n    return (\r\n        googleContext.books.map((book) => (\r\n            <ResultItem \r\n            key={book.id}\r\n            title={book.volumeInfo.title}  \r\n            link={book.volumeInfo.previewLink}              \r\n            image={book.volumeInfo.imageLinks ? book.volumeInfo.imageLinks.thumbnail : \"https://previews.123rf.com/images/pavelstasevich/pavelstasevich1811/pavelstasevich181101065/112815953-no-image-available-icon-flat-vector.jpg\"}\r\n            description={book.volumeInfo.description}\r\n            authors={book.volumeInfo.authors && book.volumeInfo.authors.length > 1 ? book.volumeInfo.authors.join(\",\") : book.volumeInfo.authors}\r\n             />\r\n        )\r\n    )\r\n    )\r\n}\r\n\r\nexport default Result\r\n","import React, { useState, useContext} from 'react';\r\nimport GoogleContext from \"../context/google/googleContext\";\r\nimport { Form } from 'react-bootstrap';\r\nimport Result from \"../components/Result/Result\"\r\n\r\n\r\n\r\nconst Home = () => {\r\n\r\n    const googleContext = useContext(GoogleContext);\r\n  \r\n\r\n    const [text, setText] = useState('');\r\n\r\n    console.log(text)\r\n    console.log(googleContext.books)\r\n    \r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        googleContext.searchBooks(text);\r\n        setText('');\r\n\r\n    };\r\n\r\n    const onChange = e => setText(e.target.value);\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={onSubmit} >\r\n                <Form.Group>\r\n                    <input\r\n                        type='text'\r\n                        name='text'\r\n                        placeholder='Search Books...'\r\n                        value={text}\r\n                        onChange={onChange}\r\n                    />\r\n                    <input\r\n                        type='submit'\r\n                        value='Search'\r\n                    />\r\n                </Form.Group>\r\n            </form>\r\n            <Result />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react';\r\n\r\nfunction ShelfListItem(props) {\r\n    const {title, authors, image, link, description,removeBook,id} = props\r\n\r\n\r\n\r\n    return (\r\n        \r\n        <div>\r\n            <div className=\"card\">\r\n                <div className=\"card-header\"></div>\r\n                <div className=\"card-body\">\r\n                    <img src={image} style={{maxWidth: \"100px\"}} alt=\"image\"/>\r\n                    <h5 className=\"card-title\" style={{margin: \"10px 0\"}}>{title}</h5>\r\n                    <p className=\"card-text\" >{description}</p>\r\n                    <p style={{fontStyle: \"italic\"}}>Author(s): {authors}</p>\r\n                    <a href={link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"btn\" style={{marginRight: \"6px\", backgroundColor: \"rgb(33, 150, 243)\", color: \"white\"}}>View Book</a>\r\n                    <button onClick={()=>removeBook(id)} className=\"btn btn-primary\">Delete</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShelfListItem;","import React, { useContext } from 'react';\r\nimport ShelfListItem from \"./ShelfListItem\";\r\nimport ShelfContext from \"../../context/shelf/shelfContext\";\r\n\r\nconst ShelfList= ()=>  {\r\n    const shelfContext = useContext(ShelfContext);\r\n    const booksInShelf= shelfContext.books\r\n\r\n    const removeBook=(id)=>{\r\n        console.log(id)\r\n        shelfContext.removeBookFromShelf(id)\r\n    }\r\n\r\n\r\n    if (!booksInShelf.length>0) {\r\n        return ( <h1>You have no books in the bookshelf!</h1>);\r\n    } else {\r\n            \r\n        return (\r\n          \r\n            booksInShelf.map((book) => (\r\n            <ShelfListItem \r\n            key={book._id}\r\n            id={book._id}\r\n            title={book.title}\r\n            link={book.link}\r\n            authors={book.authors && book.authors.length > 1 ? book.authors.join(\",\") : book.authors}\r\n            image={book.image ? book.image : \"https://previews.123rf.com/images/pavelstasevich/pavelstasevich1811/pavelstasevich181101065/112815953-no-image-available-icon-flat-vector.jpg\"}\r\n            description={book.description}\r\n            removeBook={removeBook}\r\n             />\r\n        )      \r\n        \r\n        )\r\n\r\n\r\n\r\n        )\r\n                           \r\n    }\r\n\r\n}\r\nexport default ShelfList\r\n\r\n\r\n","import React,{useContext,useEffect} from 'react';\r\nimport ShelfContext from \"../context/shelf/shelfContext\";\r\nimport ShelfList from \"../components/ShelfList/ShelfList\"\r\n\r\n\r\nconst Shelf = () => {\r\n    const shelfContext = useContext(ShelfContext);\r\n    useEffect(()=>{\r\n        shelfContext.getAllBooks()\r\n    \r\n        },[])\r\n    \r\n    return (\r\n        <div>\r\n            <ShelfList/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Shelf\r\n","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div>\r\n      <h1>Not Found</h1>\r\n      <p className='lead'>The page you are looking for does not exist...</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;","import { SEARCH_BOOKS} from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SEARCH_BOOKS:\r\n      return {\r\n        ...state,\r\n        books: action.payload\r\n      };\r\n   \r\n      return state;\r\n  }\r\n};\r\n","export const SEARCH_BOOKS = 'SEARCH_BOOKS';\r\nexport const ADD_BOOK= 'ADD_BOOK';\r\nexport const ALL_BOOKS= 'ALL_BOOKS';\r\nexport const REMOVE_BOOK='REMOVE_BOOK';\r\n\r\n","\r\nimport axios from \"axios\";\r\n\r\nconst API = {\r\n\r\n    getGoogleBooks: function(query){\r\n        return axios.get(\r\n            \"https://www.googleapis.com/books/v1/volumes?q=\"+query\r\n        ); \r\n    },\r\n\r\n    addBook: function(bookData) {\r\n        return axios.post(\"/api/books\", bookData);\r\n    },\r\n \r\n    getAllBooks: function() {\r\n        return axios.get(\"/api/books\");\r\n    },\r\n\r\n    getBook: function(id) {\r\n        return axios.get(\"/api/books/\" + id);\r\n    },\r\n    \r\n    removeBook: function(id) {\r\n        return axios.delete(\"/api/books/\" + id);\r\n    }\r\n\r\n};\r\n\r\nexport default API;","import React, { useReducer } from 'react';\r\nimport GoogleContext from './googleContext';\r\nimport GoogleReducer from './googleReducer';\r\nimport {SEARCH_BOOKS} from '../types';\r\nimport API from \"../../utils/API\"\r\n\r\n\r\nconst GoogleState = props => {\r\n  const initialState = {\r\n    books: []\r\n  \r\n  };\r\n\r\n  const [state, dispatch] = useReducer(GoogleReducer, initialState);\r\n\r\n  const searchBooks = async searchBookName => {\r\n\r\n    const res = await API.getGoogleBooks(searchBookName);\r\n\r\n    dispatch({\r\n      type: SEARCH_BOOKS,\r\n      payload: res.data.items\r\n    });\r\n  };\r\n\r\n  \r\n  return (\r\n    <GoogleContext.Provider\r\n      value={{\r\n        searchBooks,\r\n        books :state.books\r\n\r\n      }}\r\n    >\r\n      {props.children}\r\n    </GoogleContext.Provider>\r\n  );\r\n};\r\n\r\nexport default GoogleState;\r\n","import { ADD_BOOK, ALL_BOOKS,REMOVE_BOOK } from '../types';\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case ADD_BOOK:\r\n            return {\r\n                ...state,\r\n                books: [action.payload,...state.books]\r\n              };\r\n\r\n        case ALL_BOOKS:\r\n            return {\r\n                ...state,\r\n                books: action.payload\r\n            };\r\n        case REMOVE_BOOK:\r\n            return {\r\n                ...state,\r\n                books: state.books.filter(book=> book._id!==action.payload),\r\n            };\r\n\r\n    }\r\n};\r\n\r\n\r\n","import React, { useReducer } from 'react';\r\nimport ShelfContext from './shelfContext';\r\nimport ShelfReducer from './shelfReducer';\r\nimport { ADD_BOOK, ALL_BOOKS, REMOVE_BOOK } from '../types';\r\nimport API from \"../../utils/API\"\r\n\r\n\r\nconst ShelfState = props => {\r\n  const initialState = {\r\n    books: []\r\n\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(ShelfReducer, initialState);\r\n\r\n  const addBook = async newBook => {\r\n    const res = await API.addBook(newBook);\r\n    dispatch({\r\n      type: ADD_BOOK,\r\n      payload: res.data\r\n    });\r\n  };\r\n\r\n  const getAllBooks = async () => {\r\n    const res = await API.getAllBooks();\r\n    dispatch({\r\n      type: ALL_BOOKS,\r\n      payload: res.data\r\n    });\r\n  };\r\n\r\n  const removeBookFromShelf = async (id) => {\r\n     await API.removeBook(id);\r\n    dispatch({\r\n      type: REMOVE_BOOK,\r\n      payload: id\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ShelfContext.Provider\r\n      value={{\r\n        addBook,\r\n        getAllBooks,\r\n        removeBookFromShelf,\r\n        books: state.books\r\n\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ShelfContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ShelfState;\r\n","import React from 'react';\r\nimport \"./style.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nfunction Nav() {\r\n\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark\">\r\n                <Link className=\"navbar-brand\" to=\"/\">Google Books</Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                    <ul className=\"navbar-nav\">\r\n                        <li className=\"nav-item \">\r\n                            <Link className=\"nav-link\" to=\"/\">Home<span className=\"sr-only\">(current)</span></Link>\r\n                        </li>\r\n                        <li className=\"nav-item \">\r\n                            <Link className=\"nav-link\" to=\"/saved\">Bookshelf</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\nimport \"./style.css\";\r\n\r\nfunction Jumbotron() {\r\n    return (\r\n        <div>\r\n            <div className=\"jumbotron\">\r\n                <h1 className=\"display-4 text-center Text\">Google Books Search</h1>\r\n                <br></br>\r\n                <h2 className=\"text-center Text\">Search for and save books of interest </h2>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Jumbotron;","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Home from \"./pages/Home\";\r\nimport Shelf from \"./pages/Shelf\";\r\nimport NotFound from \"./pages/NotFound\";\r\nimport GoogleState from \"./context/google/GoogleState\";\r\nimport ShelfState from \"./context/shelf/ShelfState\";\r\nimport Nav from \"./components/Nav/Nav\"\r\nimport Jumbotron from \"./components/Jumbotron/Jumbotron\"\r\nimport { Container } from 'react-bootstrap'\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <GoogleState>\r\n      <ShelfState>\r\n        <Router>\r\n          <Nav />\r\n          <Container fluid>\r\n            <Jumbotron />\r\n            <div>\r\n              <Switch>\r\n                <Route exact path=\"/\" component={Home} />\r\n                <Route exact path=\"/saved\" component={Shelf} />\r\n                <Route component={NotFound} />\r\n              </Switch>\r\n            </div>\r\n\r\n          </Container>\r\n        </Router>\r\n      </ShelfState>\r\n    </GoogleState>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}